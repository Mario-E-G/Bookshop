{"ast":null,"code":"import { environment } from \"../../../../environment\";\nimport { BehaviorSubject } from \"rxjs\";\nimport jwtDecode from \"jwt-decode\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class AuthService {\n  constructor(_HttpClient, _Router) {\n    this._HttpClient = _HttpClient;\n    this._Router = _Router;\n    this.currentLogUser = new BehaviorSubject({\n      first_name: \"\",\n      last_name: \"\",\n      birth_date: new Date(),\n      email: \"\",\n      address: \"\",\n      password: \"\",\n      gender: \"\",\n      image_url: \"\"\n    });\n    this.apiBaseUrl = environment.apiBaseUrl;\n    if (localStorage.getItem(\"token\") != null) this.detachToken();\n  }\n  register(user) {\n    return this._HttpClient.post(`${this.apiBaseUrl}/register`, user);\n  }\n  login(formData) {\n    return this._HttpClient.post(`${this.apiBaseUrl}/login`, formData);\n  }\n  detachToken() {\n    this.token = localStorage.getItem(\"token\");\n    this.currentLogUser.next(jwtDecode(this.token));\n    console.log(this.currentLogUser?.value.email);\n  }\n  logout() {\n    this.currentLogUser.next({});\n    localStorage.removeItem(\"token\");\n    this._Router.navigate([\"/login\"]);\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"mappings":"AAGA,SAASA,WAAW,QAAQ,yBAAyB;AACrD,SAAqBC,eAAe,QAAQ,MAAM;AAClD,OAAOC,SAAS,MAAM,YAAY;;;;AAMlC,OAAM,MAAOC,WAAW;EAYtBC,YAAoBC,WAAuB,EAAUC,OAAe;IAAhD,gBAAW,GAAXD,WAAW;IAAsB,YAAO,GAAPC,OAAO;IAX5D,mBAAc,GAAG,IAAIL,eAAe,CAAO;MACzCM,UAAU,EAAE,EAAE;MACdC,SAAS,EAAE,EAAE;MACbC,UAAU,EAAG,IAAIC,IAAI;MACrBC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAG,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAG,EAAE;MACXC,SAAS,EAAG;KAAI,CAAC;IAEX,eAAU,GAAGf,WAAW,CAACgB,UAAU;IAEzC,IAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE,IAAI,CAACC,WAAW,EAAE;EAC/D;EAEAC,QAAQ,CAACC,IAAU;IACjB,OAAO,IAAI,CAAChB,WAAW,CAACiB,IAAI,CAAM,GAAG,IAAI,CAACN,UAAU,WAAW,EAAEK,IAAI,CAAC;EACxE;EAEAE,KAAK,CAACC,QAAa;IACjB,OAAO,IAAI,CAACnB,WAAW,CAACiB,IAAI,CAAC,GAAG,IAAI,CAACN,UAAU,QAAQ,EAAEQ,QAAQ,CAAC;EACpE;EAEAL,WAAW;IACT,IAAI,CAACM,KAAK,GAAGR,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC1C,IAAI,CAACQ,cAAc,CAACC,IAAI,CAACzB,SAAS,CAAC,IAAI,CAACuB,KAAK,CAAC,CAAC;IAC/CG,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,cAAc,EAAEI,KAAK,CAACnB,KAAK,CAAC;EAC/C;EAEAoB,MAAM;IACJ,IAAI,CAACL,cAAc,CAACC,IAAI,CAAC,EAAE,CAAC;IAC5BV,YAAY,CAACe,UAAU,CAAC,OAAO,CAAC;IAChC,IAAI,CAAC1B,OAAO,CAAC2B,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EACnC;;AAlCW9B,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAA+B,SAAX/B,WAAW;EAAAgC,YAFV;AAAM","names":["environment","BehaviorSubject","jwtDecode","AuthService","constructor","_HttpClient","_Router","first_name","last_name","birth_date","Date","email","address","password","gender","image_url","apiBaseUrl","localStorage","getItem","detachToken","register","user","post","login","formData","token","currentLogUser","next","console","log","value","logout","removeItem","navigate","factory","providedIn"],"sourceRoot":"","sources":["E:\\ITI\\Tasks\\Angular&Node\\Angular\\Bookshop\\src\\app\\service\\authentication\\auth.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { User } from \"./../../components/interface/user\";\r\nimport { environment } from \"../../../../environment\";\r\nimport { Observable, BehaviorSubject } from \"rxjs\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { Router } from \"@angular/router\";\r\nimport User from \"./../../components/interface/user\";\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class AuthService {\r\n  currentLogUser = new BehaviorSubject<User>({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    birth_date?: new Date,\r\n    email: \"\",\r\n    address?: \"\",\r\n    password: \"\",\r\n    gender?: \"\",\r\n    image_url?: \"\",});\r\n  private token?: any;\r\n  private apiBaseUrl = environment.apiBaseUrl;\r\n  constructor(private _HttpClient: HttpClient, private _Router: Router) {\r\n    if (localStorage.getItem(\"token\") != null) this.detachToken();\r\n  }\r\n\r\n  register(user: User) {\r\n    return this._HttpClient.post<any>(`${this.apiBaseUrl}/register`, user);\r\n  }\r\n\r\n  login(formData: any): Observable<any> {\r\n    return this._HttpClient.post(`${this.apiBaseUrl}/login`, formData);\r\n  }\r\n\r\n  detachToken() {\r\n    this.token = localStorage.getItem(\"token\");\r\n    this.currentLogUser.next(jwtDecode(this.token));\r\n    console.log(this.currentLogUser?.value.email);\r\n  }\r\n\r\n  logout() {\r\n    this.currentLogUser.next({});\r\n    localStorage.removeItem(\"token\");\r\n    this._Router.navigate([\"/login\"]);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}