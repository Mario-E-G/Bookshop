{"ast":null,"code":"import { environment } from \"../../../../environment\";\nimport { BehaviorSubject } from \"rxjs\";\nimport jwtDecode from \"jwt-decode\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(_HttpClient) {\n    this._HttpClient = _HttpClient;\n    this.currentLogUser = new BehaviorSubject(null);\n    this.apiBaseUrl = environment.apiBaseUrl;\n  }\n  register(user) {\n    return this._HttpClient.post(`${this.apiBaseUrl}/register`, user);\n  }\n  login(formData) {\n    return this._HttpClient.post(`${this.apiBaseUrl}/login`, formData);\n  }\n  logout() {\n    this.currentLogUser.localStorage.removeItem(\"token\");\n  }\n  detachToken() {\n    this.token = localStorage.getItem(\"token\");\n    this.currentLogUser.next(jwtDecode(this.token));\n    console.log(this.currentLogUser);\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"mappings":"AAGA,SAASA,WAAW,QAAQ,yBAAyB;AACrD,SAAqBC,eAAe,QAAQ,MAAM;AAClD,OAAOC,SAAS,MAAM,YAAY;;;AAKlC,OAAM,MAAOC,WAAW;EAItBC,YAAoBC,WAAuB;IAAvB,gBAAW,GAAXA,WAAW;IAH/B,mBAAc,GAAG,IAAIJ,eAAe,CAAC,IAAI,CAAC;IAElC,eAAU,GAAGD,WAAW,CAACM,UAAU;EACG;EAE9CC,QAAQ,CAACC,IAAU;IACjB,OAAO,IAAI,CAACH,WAAW,CAACI,IAAI,CAAM,GAAG,IAAI,CAACH,UAAU,WAAW,EAAEE,IAAI,CAAC;EACxE;EAEAE,KAAK,CAACC,QAAa;IACjB,OAAO,IAAI,CAACN,WAAW,CAACI,IAAI,CAAC,GAAG,IAAI,CAACH,UAAU,QAAQ,EAAEK,QAAQ,CAAC;EACpE;EAEAC,MAAM;IACJ,IAAI,CAACC,cAAc,CACnBC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;EAClC;EAEAC,WAAW;IACT,IAAI,CAACC,KAAK,GAAGH,YAAY,CAACI,OAAO,CAAC,OAAO,CAAC;IAC1C,IAAI,CAACL,cAAc,CAACM,IAAI,CAACjB,SAAS,CAAC,IAAI,CAACe,KAAK,CAAC,CAAC;IAC/CG,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,cAAc,CAAC;EAClC;;AAvBWV,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAmB,SAAXnB,WAAW;EAAAoB,YAFV;AAAM","names":["environment","BehaviorSubject","jwtDecode","AuthService","constructor","_HttpClient","apiBaseUrl","register","user","post","login","formData","logout","currentLogUser","localStorage","removeItem","detachToken","token","getItem","next","console","log","factory","providedIn"],"sourceRoot":"","sources":["E:\\ITI\\Tasks\\Angular&Node\\Angular\\Bookshop\\src\\app\\service\\authentication\\auth.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { User } from \"./../../components/interface/user\";\r\nimport { environment } from \"../../../../environment\";\r\nimport { Observable, BehaviorSubject } from \"rxjs\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class AuthService {\r\n  currentLogUser = new BehaviorSubject(null);\r\n  private token?: any;\r\n  private apiBaseUrl = environment.apiBaseUrl;\r\n  constructor(private _HttpClient: HttpClient) {}\r\n\r\n  register(user: User) {\r\n    return this._HttpClient.post<any>(`${this.apiBaseUrl}/register`, user);\r\n  }\r\n\r\n  login(formData: any): Observable<any> {\r\n    return this._HttpClient.post(`${this.apiBaseUrl}/login`, formData);\r\n  }\r\n\r\n  logout() {\r\n    this.currentLogUser.\r\n    localStorage.removeItem(\"token\");\r\n  }\r\n\r\n  detachToken() {\r\n    this.token = localStorage.getItem(\"token\");\r\n    this.currentLogUser.next(jwtDecode(this.token));\r\n    console.log(this.currentLogUser);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}