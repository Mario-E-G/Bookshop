{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet LoginComponent = class LoginComponent {\n  constructor(http, formBuilder, router) {\n    this.http = http;\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.submitted = false;\n  }\n  login() {\n    const data = {\n      email: this.email,\n      password: this.password\n    };\n    this.http.post('http://localhost:3000/login', data).subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.error(error);\n    });\n  }\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(8), Validators.pattern('^[a-zA-Z0-9]*')]]\n    });\n  }\n  get field() {\n    return this.loginForm.controls;\n  }\n  onSubmit(loginForm) {\n    console.log(loginForm);\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n      return;\n    }\n    // do something when form is submitted successfully\n    console.log('Form submitted successfully');\n    // this.router.navigate(['/home']);\n  }\n};\n\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"mappings":";AACA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAiCC,UAAU,QAAQ,gBAAgB;AAQ5D,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAIzBC,YACUC,IAAgB,EAChBC,WAAwB,EACxBC,MAAc;IAFd,SAAI,GAAJF,IAAI;IACJ,gBAAW,GAAXC,WAAW;IACX,WAAM,GAANC,MAAM;IAoBhB,cAAS,GAAG,KAAK;EAnBd;EAEHC,KAAK;IACH,MAAMC,IAAI,GAAG;MACXC,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBC,QAAQ,EAAE,IAAI,CAACA;KAChB;IAED,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,6BAA6B,EAAEH,IAAI,CAAC,CAACI,SAAS,CAC1DC,QAAQ,IAAI;MACXC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACvB,CAAC,EACAG,KAAK,IAAI;MACRF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CACF;EACH;EAKAC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACb,WAAW,CAACc,KAAK,CAAC;MACtCV,KAAK,EAAE,CAAC,EAAE,EAAE,CAACR,UAAU,CAACmB,QAAQ,EAAEnB,UAAU,CAACQ,KAAK,CAAC,CAAC;MACpDC,QAAQ,EAAE,CACR,EAAE,EACF,CACET,UAAU,CAACmB,QAAQ,EACnBnB,UAAU,CAACoB,SAAS,CAAC,CAAC,CAAC,EACvBpB,UAAU,CAACqB,OAAO,CAAC,eAAe,CAAC,CACpC;KAEJ,CAAC;EACJ;EAEA,IAAIC,KAAK;IACP,OAAO,IAAI,CAACL,SAAS,CAACM,QAAQ;EAChC;EAEAC,QAAQ,CAACP,SAAmB;IAC1BJ,OAAO,CAACC,GAAG,CAACG,SAAS,CAAC;IAEtB,IAAI,CAACQ,SAAS,GAAG,IAAI;IAErB;IACA,IAAI,IAAI,CAACR,SAAS,CAACS,OAAO,EAAE;MAC1B;;IAGF;IACAb,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC1C;EACF;CACD;;AA7DYb,cAAc,eAL1BF,SAAS,CAAC;EACT4B,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,GACW5B,cAAc,CA6D1B;SA7DYA,cAAc","names":["Component","Validators","LoginComponent","constructor","http","formBuilder","router","login","data","email","password","post","subscribe","response","console","log","error","ngOnInit","loginForm","group","required","minLength","pattern","field","controls","onSubmit","submitted","invalid","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\ITI\\ITI projects\\angular\\Bookshop\\src\\app\\login\\login.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent {\r\n  email!: string;\r\n  password!: string;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router\r\n  ) {}\r\n\r\n  login() {\r\n    const data = {\r\n      email: this.email,\r\n      password: this.password,\r\n    };\r\n\r\n    this.http.post('http://localhost:3000/login', data).subscribe(\r\n      (response) => {\r\n        console.log(response);\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  loginForm!: FormGroup;\r\n  submitted = false;\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: [\r\n        '',\r\n        [\r\n          Validators.required,\r\n          Validators.minLength(8),\r\n          Validators.pattern('^[a-zA-Z0-9]*'),\r\n        ],\r\n      ],\r\n    });\r\n  }\r\n\r\n  get field() {\r\n    return this.loginForm.controls;\r\n  }\r\n\r\n  onSubmit(loginForm:FormGroup) {\r\n    console.log(loginForm);\r\n    \r\n    this.submitted = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    // do something when form is submitted successfully\r\n    console.log('Form submitted successfully');\r\n    // this.router.navigate(['/home']);\r\n  }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}