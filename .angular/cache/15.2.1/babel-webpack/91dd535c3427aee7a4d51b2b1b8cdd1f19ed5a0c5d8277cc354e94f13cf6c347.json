{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/register.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction RegisterComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 35);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.error);\n  }\n}\nfunction RegisterComponent_div_15_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 38);\n    i0.ɵɵtext(1, \" First name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36);\n    i0.ɵɵtemplate(1, RegisterComponent_div_15_p_1_Template, 2, 0, \"p\", 37);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.registerForm.controls[\"first_name\"].errors[\"required\"]);\n  }\n}\nfunction RegisterComponent_div_20_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 38);\n    i0.ɵɵtext(1, \" Last name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36);\n    i0.ɵɵtemplate(1, RegisterComponent_div_20_p_1_Template, 2, 0, \"p\", 37);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.registerForm.controls[\"last_name\"].errors[\"required\"]);\n  }\n}\nfunction RegisterComponent_div_25_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 38);\n    i0.ɵɵtext(1, \" Email address is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_25_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 38);\n    i0.ɵɵtext(1, \" Invalid email address. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36);\n    i0.ɵɵtemplate(1, RegisterComponent_div_25_p_1_Template, 2, 0, \"p\", 37);\n    i0.ɵɵtemplate(2, RegisterComponent_div_25_p_2_Template, 2, 0, \"p\", 37);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r3.registerForm.get(\"email\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r3.registerForm.get(\"email\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"email\"]);\n  }\n}\nfunction RegisterComponent_div_31_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Birthdate is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function () {\n  return [\"required\"];\n};\nfunction RegisterComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36);\n    i0.ɵɵtemplate(1, RegisterComponent_div_31_div_1_Template, 2, 0, \"div\", 39);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.registerForm.controls[\"birth_date\"])(\"ngIfErrors\", i0.ɵɵpureFunction0(2, _c0));\n  }\n}\nfunction RegisterComponent_div_44_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 38);\n    i0.ɵɵtext(1, \" Gender is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36);\n    i0.ɵɵtemplate(1, RegisterComponent_div_44_p_1_Template, 2, 0, \"p\", 37);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.registerForm.controls[\"gender\"].errors[\"required\"]);\n  }\n}\nfunction RegisterComponent_div_49_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 38);\n    i0.ɵɵtext(1, \" image is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36);\n    i0.ɵɵtemplate(1, RegisterComponent_div_49_p_1_Template, 2, 0, \"p\", 37);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.registerForm.controls[\"image_url\"].errors[\"required\"]);\n  }\n}\nfunction RegisterComponent_div_54_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 38);\n    i0.ɵɵtext(1, \" Password is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_54_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \" Password must be at least 8 characters. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_54_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36);\n    i0.ɵɵtemplate(1, RegisterComponent_div_54_p_1_Template, 2, 0, \"p\", 37);\n    i0.ɵɵtemplate(2, RegisterComponent_div_54_p_2_Template, 2, 0, \"p\", 40);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.registerForm.controls[\"password\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r7.registerForm.get(\"password\")) == null ? null : tmp_1_0.errors[\"minlength\"]);\n  }\n}\nfunction RegisterComponent_div_59_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 38);\n    i0.ɵɵtext(1, \" Confirm password is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_59_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \" Password doesn't match. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_59_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36);\n    i0.ɵɵtemplate(1, RegisterComponent_div_59_p_1_Template, 2, 0, \"p\", 37);\n    i0.ɵɵtemplate(2, RegisterComponent_div_59_p_2_Template, 2, 0, \"p\", 40);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.registerForm.controls[\"confirm_password\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.registerForm.controls[\"confirm_password\"].errors[\"passwordMismatch\"]);\n  }\n}\nexport class RegisterComponent {\n  constructor(_register, formBuilder, router) {\n    this._register = _register;\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.submitted = false;\n  }\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      // ... your form fields here ...\n    }, {\n      validator: this.matchingPasswords(\"password\", \"confirm_password\")\n    });\n  }\n  matchingPasswords(passwordKey, confirmPasswordKey) {\n    return group => {\n      const password = group.controls[passwordKey];\n      const confirm_password = group.controls[confirmPasswordKey];\n      if (password.value !== confirm_password.value) {\n        confirm_password.setErrors({\n          passwordMismatch: true\n        });\n      }\n    };\n  }\n  onSubmit(f) {\n    this.submitted = true;\n    if (this.registerForm.invalid) {\n      console.log(f);\n      return;\n    }\n    this._register.register(f.value).subscribe(response => {\n      if (response.status === 200) {\n        console.log(\"Form submitted successfully\");\n        this.router.navigate([\"/login\"]);\n      }\n    }, error => {\n      console.error(error);\n      if (error.status === 0) {\n        this.error = \"Unable to connect to the server. Please try again later.\";\n      } else if (error.status === 400) {\n        this.error = error.error.message;\n      } else if (error.status === 409) {\n        this.error = error.error.message;\n        setTimeout(() => {\n          this.router.navigate([\"/login\"]);\n        }, 3000); // wait for 3 seconds before navigating\n      } else {\n        this.error = \"An unknown error has occurred. Please try again later.\";\n      }\n      // Display the error message\n      this.displayError();\n    });\n  }\n  displayError() {\n    // Remove any existing error messages\n    const alertContainer = document.querySelector(\".alert-container\");\n    alertContainer.innerHTML = \"\";\n    // Create a new alert div\n    const alertDiv = document.createElement(\"div\");\n    alertDiv.classList.add(\"alert\", \"alert-danger\", \"my-3\");\n    alertDiv.innerHTML = this.error || \"An error occurred.\";\n    // Add the alert div to the container\n    alertContainer.appendChild(alertDiv);\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.RegisterService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 64,\n  vars: 11,\n  consts: [[\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"alert-container\"], [1, \"container\"], [1, \"row\", \"justify-content-center\", \"align-items-center\"], [1, \"col-lg-5\", \"col-md-8\", \"col-sm-10\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [1, \"bg-light\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"mb-3\"], [\"for\", \"first_name\", 1, \"control-label\", \"my-2\", \"text-dark\"], [\"formControlName\", \"last_name\", \"placeholder\", \"Enter your first name\", \"id\", \"first_name\", \"type\", \"text\", \"formControlName\", \"first_name\", \"required\", \"\", 1, \"form-control\", \"bg-light\", \"text-dark\"], [\"class\", \"error\", 4, \"ngIf\"], [\"for\", \"last_name\", 1, \"control-label\", \"my-2\", \"text-dark\"], [\"placeholder\", \"Enter your last name\", \"id\", \"last_name\", \"type\", \"text\", \"formControlName\", \"last_name\", \"required\", \"\", 1, \"form-control\", \"bg-light\", \"text-dark\"], [\"for\", \"email\", 1, \"control-label\", \"my-2\", \"text-dark\"], [\"placeholder\", \"Enter your Email\", \"id\", \"email\", \"type\", \"email\", \"formControlName\", \"email\", \"required\", \"\", 1, \"form-control\", \"bg-light\", \"text-dark\"], [1, \"form-group\"], [\"for\", \"birthdate\"], [\"type\", \"date\", \"id\", \"birth_date\", \"formControlName\", \"birth_date\", 1, \"form-control\"], [\"for\", \"gender\", 1, \"control-label\", \"my-2\", \"text-dark\"], [\"id\", \"gender\", \"formControlName\", \"gender\", 1, \"form-control\"], [\"value\", \"\"], [\"value\", \"male\"], [\"value\", \"female\"], [\"value\", \"other\"], [\"for\", \"image_url\", 1, \"control-label\", \"my-2\", \"text-dark\"], [\"id\", \"image_url\", \"type\", \"text\", \"formControlName\", \"image_url\", \"required\", \"\", 1, \"form-control\", \"bg-light\", \"text-dark\"], [\"for\", \"password\", 1, \"control-label\", \"my-2\", \"text-dark\"], [\"id\", \"password\", \"type\", \"password\", \"formControlName\", \"password\", \"required\", \"\", 1, \"form-control\", \"bg-light\", \"text-dark\"], [\"for\", \"confirm_password\", 1, \"control-label\", \"my-2\", \"text-dark\"], [\"id\", \"confirm_password\", \"type\", \"password\", \"formControlName\", \"confirm_password\", \"required\", \"\", 1, \"form-control\", \"bg-light\", \"text-dark\"], [1, \"form-group\", \"w-50\"], [1, \"col-sm-offset-2\", \"col-sm-10\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"alert\", \"alert-danger\"], [1, \"error\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"text-danger\"], [4, \"ngIf\", \"ngIfErrors\"], [4, \"ngIf\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, RegisterComponent_div_0_Template, 2, 1, \"div\", 0);\n      i0.ɵɵelement(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6)(7, \"h4\");\n      i0.ɵɵtext(8, \"Register\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 7)(10, \"form\", 8);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_10_listener() {\n        return ctx.onSubmit(ctx.registerForm);\n      });\n      i0.ɵɵelementStart(11, \"div\", 9)(12, \"label\", 10);\n      i0.ɵɵtext(13, \"First Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 11);\n      i0.ɵɵtemplate(15, RegisterComponent_div_15_Template, 2, 1, \"div\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 9)(17, \"label\", 13);\n      i0.ɵɵtext(18, \"Last Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 14);\n      i0.ɵɵtemplate(20, RegisterComponent_div_20_Template, 2, 1, \"div\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"div\", 9)(22, \"label\", 15);\n      i0.ɵɵtext(23, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(24, \"input\", 16);\n      i0.ɵɵtemplate(25, RegisterComponent_div_25_Template, 3, 2, \"div\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"div\", 9)(27, \"div\", 17)(28, \"label\", 18);\n      i0.ɵɵtext(29, \"Birthdate:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(30, \"input\", 19);\n      i0.ɵɵtemplate(31, RegisterComponent_div_31_Template, 2, 3, \"div\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(32, \"div\", 9)(33, \"label\", 20);\n      i0.ɵɵtext(34, \"gender:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"select\", 21)(36, \"option\", 22);\n      i0.ɵɵtext(37, \"Select\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"option\", 23);\n      i0.ɵɵtext(39, \"Male\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"option\", 24);\n      i0.ɵɵtext(41, \"Female\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(42, \"option\", 25);\n      i0.ɵɵtext(43, \"Other\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(44, RegisterComponent_div_44_Template, 2, 1, \"div\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(45, \"div\", 9)(46, \"label\", 26);\n      i0.ɵɵtext(47, \"image_url:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(48, \"input\", 27);\n      i0.ɵɵtemplate(49, RegisterComponent_div_49_Template, 2, 1, \"div\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(50, \"div\", 9)(51, \"label\", 28);\n      i0.ɵɵtext(52, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(53, \"input\", 29);\n      i0.ɵɵtemplate(54, RegisterComponent_div_54_Template, 3, 2, \"div\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(55, \"div\", 9)(56, \"label\", 30);\n      i0.ɵɵtext(57, \"confirm_password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(58, \"input\", 31);\n      i0.ɵɵtemplate(59, RegisterComponent_div_59_Template, 3, 2, \"div\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(60, \"div\", 32)(61, \"div\", 33)(62, \"button\", 34);\n      i0.ɵɵtext(63, \" Register \");\n      i0.ɵɵelementEnd()()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.error);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", (ctx.registerForm.controls[\"first_name\"] == null ? null : ctx.registerForm.controls[\"first_name\"].invalid) && (ctx.registerForm.controls[\"first_name\"].dirty || ctx.registerForm.controls[\"first_name\"].touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", (ctx.registerForm.controls[\"last_name\"] == null ? null : ctx.registerForm.controls[\"last_name\"].invalid) && (ctx.registerForm.controls[\"last_name\"].dirty || ctx.registerForm.controls[\"last_name\"].touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.registerForm.controls[\"email\"].invalid && (ctx.registerForm.controls[\"email\"].dirty || ctx.registerForm.controls[\"email\"].touched));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.registerForm.controls[\"birth_date\"].invalid && (ctx.registerForm.controls[\"birth_date\"].dirty || ctx.registerForm.controls[\"birth_date\"].touched));\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngIf\", (ctx.registerForm.controls[\"gender\"] == null ? null : ctx.registerForm.controls[\"gender\"].invalid) && (ctx.registerForm.controls[\"gender\"].dirty || ctx.registerForm.controls[\"gender\"].touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", (ctx.registerForm.controls[\"image_url\"] == null ? null : ctx.registerForm.controls[\"image_url\"].invalid) && (ctx.registerForm.controls[\"image_url\"].dirty || ctx.registerForm.controls[\"image_url\"].touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", (ctx.registerForm.controls[\"password\"] == null ? null : ctx.registerForm.controls[\"password\"].invalid) && (ctx.registerForm.controls[\"password\"].dirty || ctx.registerForm.controls[\"password\"].touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", (ctx.registerForm.controls[\"confirm_password\"] == null ? null : ctx.registerForm.controls[\"confirm_password\"].invalid) && (ctx.registerForm.controls[\"confirm_password\"].dirty || ctx.registerForm.controls[\"confirm_password\"].touched));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", ctx.registerForm.invalid);\n    }\n  },\n  dependencies: [i4.NgIf, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","RegisterComponent","constructor","_register","formBuilder","router","ngOnInit","registerForm","group","validator","matchingPasswords","passwordKey","confirmPasswordKey","password","controls","confirm_password","value","setErrors","passwordMismatch","onSubmit","f","submitted","invalid","console","log","register","subscribe","response","status","navigate","error","message","setTimeout","displayError","alertContainer","document","querySelector","innerHTML","alertDiv","createElement","classList","add","appendChild","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\ITI\\Open Source Track Files\\My Projects\\Front\\src\\app\\components\\register\\register.component.html","D:\\ITI\\Open Source Track Files\\My Projects\\Front\\src\\app\\components\\register\\register.component.ts"],"sourcesContent":["\r\n<div *ngIf=\"error\" class=\"alert alert-danger\">{{error}}</div>\r\n<div class=\"alert-container\"></div>\r\n\r\n<div class=\"container\">\r\n    <div class=\"row justify-content-center align-items-center\">\r\n        <div class=\"col-lg-5 col-md-8 col-sm-10\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">\r\n                    <h4>Register</h4>\r\n                </div>\r\n                <div class=\"card-body\">\r\n                    <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit(registerForm)\" class=\"bg-light\">\r\n                        <div class=\"form-group mb-3\">\r\n                            <label for=\"first_name\" class=\"control-label my-2 text-dark\">First Name:</label>\r\n                            <input formControlName=\"last_name\" placeholder=\"Enter your first name\" id=\"first_name\" type=\"text\"\r\n                                formControlName=\"first_name\" class=\"form-control bg-light text-dark\" required />\r\n                            <div class=\"error\" *ngIf=\"\r\n                      registerForm.controls['first_name']?.invalid &&\r\n                      (registerForm.controls['first_name'].dirty ||\r\n                      registerForm.controls['first_name'].touched)\r\n                      \">\r\n                      <p *ngIf=\"registerForm.controls['first_name'].errors!['required']\" class=\"text-danger\">\r\n                        First name is required.\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group mb-3\">\r\n                            <label for=\"last_name\" class=\"control-label my-2 text-dark\">Last Name:</label>\r\n                            <input placeholder=\"Enter your last name\" id=\"last_name\" type=\"text\"\r\n                                formControlName=\"last_name\" class=\"form-control bg-light text-dark\" required />\r\n                            <div class=\"error\" *ngIf=\"\r\n                      registerForm.controls['last_name']?.invalid &&\r\n                      (registerForm.controls['last_name'].dirty ||\r\n                      registerForm.controls['last_name'].touched)\r\n                      \">\r\n                                <p *ngIf=\"registerForm.controls['last_name'].errors!['required']\" class=\"text-danger\">\r\n                                    Last name is required.\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group mb-3\">\r\n                            <label for=\"email\" class=\"control-label  my-2 text-dark\">Email:</label>\r\n                            <input placeholder=\"Enter your Email\" id=\"email\" type=\"email\" formControlName=\"email\"\r\n                                class=\"form-control bg-light text-dark\" required />\r\n                            <div class=\"error\" *ngIf=\"\r\n                      registerForm.controls['email'].invalid &&\r\n                      (registerForm.controls['email'].dirty ||\r\n                      registerForm.controls['email'].touched)\r\n                      \">\r\n                                <p *ngIf=\"registerForm.get('email')?.errors?.['required']\" class=\"text-danger\">\r\n                                    Email address is required.\r\n                                </p>\r\n                                <p *ngIf=\"registerForm.get('email')?.errors?.['email']\" class=\"text-danger\">\r\n                                    Invalid email address.\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group mb-3\">\r\n\r\n                            <div class=\"form-group\">\r\n                                <label for=\"birthdate\">Birthdate:</label>\r\n                                <input type=\"date\" id=\"birth_date\" formControlName=\"birth_date\" class=\"form-control\" />\r\n                                <div class=\"error\"\r\n                                    *ngIf=\"registerForm.controls['birth_date'].invalid && (registerForm.controls['birth_date'].dirty || registerForm.controls['birth_date'].touched)\">\r\n                                    <div *ngIf=\"registerForm.controls['birth_date']errors['required']\">Birthdate is\r\n                                        required.</div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div class=\"form-group mb-3\">\r\n                            <label for=\"gender\" class=\"control-label my-2 text-dark\">gender:</label>\r\n                            <select id=\"gender\" formControlName=\"gender\" class=\"form-control\">\r\n                                <option value=\"\">Select</option>\r\n                                <option value=\"male\">Male</option>\r\n                                <option value=\"female\">Female</option>\r\n                                <option value=\"other\">Other</option>\r\n                            </select>\r\n\r\n                            <div class=\"error\" *ngIf=\"registerForm.controls['gender']?.invalid &&(registerForm.controls['gender'].dirty || registerForm.controls['gender'].touched)\r\n                      \">\r\n                                <p *ngIf=\"registerForm.controls['gender'].errors!['required']\" class=\"text-danger\">\r\n                                    Gender is required.\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group mb-3\">\r\n                            <label for=\"image_url\" class=\"control-label my-2 text-dark\">image_url:</label>\r\n                            <input id=\"image_url\" type=\"text\" formControlName=\"image_url\"\r\n                                class=\"form-control bg-light text-dark\" required />\r\n                            <div class=\"error\" *ngIf=\"registerForm.controls['image_url']?.invalid &&(registerForm.controls['image_url'].dirty || registerForm.controls['image_url'].touched)\r\n                                \">\r\n                                <p *ngIf=\"registerForm.controls['image_url'].errors!['required']\" class=\"text-danger\">\r\n                                    image is required.\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group mb-3\">\r\n                            <label for=\"password\" class=\"control-label  my-2 text-dark\">Password:</label>\r\n                            <input id=\"password\" type=\"password\" formControlName=\"password\"\r\n                                class=\"form-control bg-light text-dark\" required />\r\n                            <div class=\"error\" *ngIf=\"\r\n                      registerForm.controls['password']?.invalid &&\r\n                      (registerForm.controls['password'].dirty ||\r\n                      registerForm.controls['password'].touched)\r\n                      \">\r\n                                <p *ngIf=\"registerForm.controls['password'].errors!['required']\" class=\"text-danger\">\r\n                                    Password is required.\r\n                                </p>\r\n                                <p *ngIf=\"(registerForm.get('password')?.errors)!['minlength']\">\r\n                                    Password must be at least 8 characters.\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group mb-3\">\r\n                            <label for=\"confirm_password\" class=\"control-label my-2 text-dark\">confirm_password:</label>\r\n                            <input id=\"confirm_password\" type=\"password\" formControlName=\"confirm_password\"\r\n                                class=\"form-control bg-light text-dark\" required />\r\n                            <div class=\"error\" *ngIf=\"\r\n                      registerForm.controls['confirm_password']?.invalid &&\r\n                      (registerForm.controls['confirm_password'].dirty ||\r\n                      registerForm.controls['confirm_password'].touched)\r\n                      \">\r\n                                <p *ngIf=\"registerForm.controls['confirm_password'].errors!['required']\"\r\n                                    class=\"text-danger\">\r\n                                    Confirm password is required.\r\n                                </p>\r\n                                <p *ngIf=\"registerForm.controls['confirm_password'].errors!['passwordMismatch']\">\r\n                                    Password doesn't match.\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group w-50\">\r\n                            <div class=\"col-sm-offset-2 col-sm-10\">\r\n                                <button type=\"submit\" [disabled]=\"registerForm.invalid\" class=\"btn btn-primary\">\r\n                                    Register\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","// import { HttpClient } from \"@angular/common/http\";\r\n// import { Component, OnInit } from \"@angular/core\";\r\n// import {\r\n//   FormBuilder,\r\n//   FormGroup,\r\n//   Validators,\r\n//   FormControl,\r\n// } from \"@angular/forms\";\r\n// import { Router } from \"@angular/router\";\r\n// import { RegisterService } from \"src/app/service/register.service\";\r\n// import { User } from \"../interface/user\";\r\n\r\n// @Component({\r\n//   selector: \"app-register\",\r\n//   templateUrl: \"./register.component.html\",\r\n//   styleUrls: [\"./register.component.css\"],\r\n// })\r\n// export class RegisterComponent implements OnInit {\r\n//   newUser!: User;\r\n\r\n//   error?: String;\r\n//   constructor(\r\n//     private _register: RegisterService,\r\n//     private http: HttpClient,\r\n//     private formBuilder: FormBuilder,\r\n//     private router: Router\r\n//   ) {}\r\n\r\n//   registerForm!: FormGroup;\r\n//   submitted = false;\r\n\r\n//   ngOnInit() {\r\n//     this.registerForm = this.formBuilder.group(\r\n//       {\r\n//         first_name: [\"\", Validators.required],\r\n//         last_name: [\"\", Validators.required],\r\n//         email: [\"\", [Validators.required, Validators.email]],\r\n//         birth_date: [\"\"],\r\n//         address: [\"\"],\r\n//         password: [\r\n//           \"\",\r\n//           [\r\n//             Validators.required,\r\n//             Validators.minLength(8),\r\n//             Validators.pattern(\"^[a-zA-Z0-9]*\"),\r\n//           ],\r\n//         ],\r\n//         confirm_password: [\"\", Validators.required],\r\n//         gender: [\"\"],\r\n//         image_url: [\"\"],\r\n//         // agree_terms: ['', Validators.required]\r\n//       },\r\n//       { validator: this.matchingPasswords(\"password\", \"confirm_password\") }\r\n//     );\r\n//   }\r\n\r\n//   matchingPasswords(passwordKey: string, confirmPasswordKey: string) {\r\n//     return (group: FormGroup) => {\r\n//       const password = group.controls[passwordKey];\r\n//       const confirm_password = group.controls[confirmPasswordKey];\r\n\r\n//       if (password.value !== confirm_password.value) {\r\n//         confirm_password.setErrors({ passwordMismatch: true });\r\n//       }\r\n//     };\r\n//   }\r\n\r\n//   get f() {\r\n//     return this.registerForm.controls;\r\n//   }\r\n\r\n//   onSubmit(f: FormGroup) {\r\n//     this.submitted = true;\r\n//     if (this.registerForm.invalid) {\r\n//       console.log(f);\r\n//       return;\r\n//     }\r\n\r\n//     this._register.register(f.value).subscribe(\r\n//       (response) => {\r\n//         if (response.status === 200) {\r\n//           console.log(\"Form submitted successfully\");\r\n//           this.router.navigate([\"/login\"]);\r\n//         }\r\n//         // else {\r\n//         //   this.error = response.error.Message;\r\n//         // }\r\n//       },\r\n//       (error) => {\r\n//         console.error(error);\r\n//         if (error.status === 0) {\r\n//           this.error =\r\n//             \"Unable to connect to the server. Please try again later.\";\r\n//         } else if (error.status === 400) {\r\n//           this.error = error.error.message;\r\n//         } else if (error.status === 409) {\r\n//           this.error = error.error.message;\r\n//           setTimeout(() => {\r\n//             this.router.navigate([\"/login\"]);\r\n//           }, 3000); // wait for 3 seconds before navigating\r\n//         } else {\r\n//           this.error = \"An unknown error has occurred. Please try again later.\";\r\n//         }\r\n//       }\r\n//     );\r\n//   }\r\n// }\r\n\r\n\r\n\r\n// register.component.ts\r\n\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { RegisterService } from \"src/app/service/register.service\";\r\nimport { User } from \"../interface/user\";\r\n\r\n@Component({\r\n  selector: \"app-register\",\r\n  templateUrl: \"./register.component.html\",\r\n  styleUrls: [\"./register.component.css\"],\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  newUser!: User;\r\n  error?: string;\r\n\r\n  constructor(\r\n    private _register: RegisterService,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router\r\n  ) {}\r\n\r\n  registerForm!: FormGroup;\r\n  submitted = false;\r\n\r\n  ngOnInit() {\r\n    this.registerForm = this.formBuilder.group(\r\n      {\r\n        // ... your form fields here ...\r\n      },\r\n      { validator: this.matchingPasswords(\"password\", \"confirm_password\") }\r\n    );\r\n  }\r\n\r\n  matchingPasswords(passwordKey: string, confirmPasswordKey: string) {\r\n    return (group: FormGroup) => {\r\n      const password = group.controls[passwordKey];\r\n      const confirm_password = group.controls[confirmPasswordKey];\r\n\r\n      if (password.value !== confirm_password.value) {\r\n        confirm_password.setErrors({ passwordMismatch: true });\r\n      }\r\n    };\r\n  }\r\n\r\n  onSubmit(f: FormGroup) {\r\n    this.submitted = true;\r\n    if (this.registerForm.invalid) {\r\n      console.log(f);\r\n      return;\r\n    }\r\n\r\n    this._register.register(f.value).subscribe(\r\n      (response) => {\r\n        if (response.status === 200) {\r\n          console.log(\"Form submitted successfully\");\r\n          this.router.navigate([\"/login\"]);\r\n        }\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n        if (error.status === 0) {\r\n          this.error =\r\n            \"Unable to connect to the server. Please try again later.\";\r\n        } else if (error.status === 400) {\r\n          this.error = error.error.message;\r\n        } else if (error.status === 409) {\r\n          this.error = error.error.message;\r\n          setTimeout(() => {\r\n            this.router.navigate([\"/login\"]);\r\n          }, 3000); // wait for 3 seconds before navigating\r\n        } else {\r\n          this.error = \"An unknown error has occurred. Please try again later.\";\r\n        }\r\n        // Display the error message\r\n        this.displayError();\r\n      }\r\n    );\r\n  }\r\n\r\n  displayError() {\r\n    // Remove any existing error messages\r\n    const alertContainer = document.querySelector(\".alert-container\");\r\n    alertContainer!.innerHTML = \"\";\r\n\r\n    // Create a new alert div\r\n    const alertDiv = document.createElement(\"div\");\r\n    alertDiv.classList.add(\"alert\", \"alert-danger\", \"my-3\");\r\n    alertDiv.innerHTML = this.error || \"An error occurred.\";\r\n\r\n    // Add the alert div to the container\r\n    alertContainer!.appendChild(alertDiv);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}