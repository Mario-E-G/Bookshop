{"ast":null,"code":"import { environment } from \"../../../../environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(_HttpClient) {\n    this._HttpClient = _HttpClient;\n    this.currentLogUser = null;\n    this.apiBaseUrl = environment.apiBaseUrl;\n  }\n  detachToken() {}\n  register(user) {\n    return this._HttpClient.post(`${this.apiBaseUrl}/register`, user);\n  }\n  login(formData) {\n    return this._HttpClient.post(`${this.apiBaseUrl}/login`, formData);\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"mappings":"AAGA,SAASA,WAAW,QAAQ,yBAAyB;;;AAOrD,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,WAAuB;IAAvB,gBAAW,GAAXA,WAAW;IAF/B,mBAAc,GAAG,IAAI;IACb,eAAU,GAAGH,WAAW,CAACI,UAAU;EACG;EAE9CC,WAAW,IAGX;EAEAC,QAAQ,CAACC,IAAU;IACjB,OAAO,IAAI,CAACJ,WAAW,CAACK,IAAI,CAAM,GAAG,IAAI,CAACJ,UAAU,WAAW,EAAEG,IAAI,CAAC;EACxE;EAEAE,KAAK,CAACC,QAAa;IACjB,OAAO,IAAI,CAACP,WAAW,CAACK,IAAI,CAAC,GAAG,IAAI,CAACJ,UAAU,QAAQ,EAAEM,QAAQ,CAAC;EACpE;;AAhBWT,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAU,SAAXV,WAAW;EAAAW,YAFV;AAAM","names":["environment","AuthService","constructor","_HttpClient","apiBaseUrl","detachToken","register","user","post","login","formData","factory","providedIn"],"sourceRoot":"","sources":["E:\\ITI\\Tasks\\Angular&Node\\Angular\\Bookshop\\src\\app\\service\\authentication\\auth.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { User } from \"./../../components/interface/user\";\r\nimport { environment } from \"../../../../environment\";\r\nimport { Observable } from \"rxjs\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class AuthService {\r\n  currentLogUser = null;\r\n  private apiBaseUrl = environment.apiBaseUrl;\r\n  constructor(private _HttpClient: HttpClient) {}\r\n\r\n  detachToken()\r\n  {\r\n    \r\n  }\r\n\r\n  register(user: User) {\r\n    return this._HttpClient.post<any>(`${this.apiBaseUrl}/register`, user);\r\n  }\r\n\r\n  login(formData: any): Observable<any> {\r\n    return this._HttpClient.post(`${this.apiBaseUrl}/login`, formData);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}