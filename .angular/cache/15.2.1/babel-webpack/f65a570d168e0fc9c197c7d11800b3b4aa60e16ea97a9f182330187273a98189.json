{"ast":null,"code":"import { environment } from \"../../../../environment\";\nimport jwtDecode from \"jwt-decode\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(_HttpClient) {\n    this._HttpClient = _HttpClient;\n    this.currentLogUser = null;\n    this.apiBaseUrl = environment.apiBaseUrl;\n  }\n  detachToken() {\n    this.token = this.currentLogUser = jwtDecode(this.token);\n  }\n  register(user) {\n    return this._HttpClient.post(`${this.apiBaseUrl}/register`, user);\n  }\n  login(formData) {\n    return this._HttpClient.post(`${this.apiBaseUrl}/login`, formData);\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"mappings":"AAGA,SAASA,WAAW,QAAQ,yBAAyB;AAErD,OAAOC,SAAS,MAAM,YAAY;;;AAKlC,OAAM,MAAOC,WAAW;EAItBC,YAAoBC,WAAuB;IAAvB,gBAAW,GAAXA,WAAW;IAH/B,mBAAc,GAAG,IAAI;IAEb,eAAU,GAAGJ,WAAW,CAACK,UAAU;EACG;EAE9CC,WAAW;IACT,IAAI,CAACC,KAAK,GACV,IAAI,CAACC,cAAc,GAAGP,SAAS,CAAC,IAAI,CAACM,KAAK,CAAC;EAC7C;EAEAE,QAAQ,CAACC,IAAU;IACjB,OAAO,IAAI,CAACN,WAAW,CAACO,IAAI,CAAM,GAAG,IAAI,CAACN,UAAU,WAAW,EAAEK,IAAI,CAAC;EACxE;EAEAE,KAAK,CAACC,QAAa;IACjB,OAAO,IAAI,CAACT,WAAW,CAACO,IAAI,CAAC,GAAG,IAAI,CAACN,UAAU,QAAQ,EAAEQ,QAAQ,CAAC;EACpE;;AAjBWX,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAY,SAAXZ,WAAW;EAAAa,YAFV;AAAM","names":["environment","jwtDecode","AuthService","constructor","_HttpClient","apiBaseUrl","detachToken","token","currentLogUser","register","user","post","login","formData","factory","providedIn"],"sourceRoot":"","sources":["E:\\ITI\\Tasks\\Angular&Node\\Angular\\Bookshop\\src\\app\\service\\authentication\\auth.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { User } from \"./../../components/interface/user\";\r\nimport { environment } from \"../../../../environment\";\r\nimport { Observable } from \"rxjs\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class AuthService {\r\n  currentLogUser = null;\r\n  private token!: string;\r\n  private apiBaseUrl = environment.apiBaseUrl;\r\n  constructor(private _HttpClient: HttpClient) {}\r\n\r\n  detachToken() {\r\n    this.token = \r\n    this.currentLogUser = jwtDecode(this.token);\r\n  }\r\n\r\n  register(user: User) {\r\n    return this._HttpClient.post<any>(`${this.apiBaseUrl}/register`, user);\r\n  }\r\n\r\n  login(formData: any): Observable<any> {\r\n    return this._HttpClient.post(`${this.apiBaseUrl}/login`, formData);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}