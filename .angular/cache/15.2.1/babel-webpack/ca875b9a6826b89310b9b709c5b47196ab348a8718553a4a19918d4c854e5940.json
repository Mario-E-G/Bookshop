{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/authentication/auth.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction RegisterComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.error, \" \");\n  }\n}\nfunction RegisterComponent_div_16_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 39);\n    i0.ɵɵtext(1, \" First name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 37);\n    i0.ɵɵtemplate(1, RegisterComponent_div_16_p_1_Template, 2, 0, \"p\", 38);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r1.registerForm.get(\"first_name\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\nfunction RegisterComponent_div_21_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 39);\n    i0.ɵɵtext(1, \" Last name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 37);\n    i0.ɵɵtemplate(1, RegisterComponent_div_21_p_1_Template, 2, 0, \"p\", 38);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.registerForm.controls[\"last_name\"].errors[\"required\"]);\n  }\n}\nfunction RegisterComponent_div_26_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 39);\n    i0.ɵɵtext(1, \" Email address is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_26_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 39);\n    i0.ɵɵtext(1, \" Invalid email address. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 37);\n    i0.ɵɵtemplate(1, RegisterComponent_div_26_p_1_Template, 2, 0, \"p\", 38);\n    i0.ɵɵtemplate(2, RegisterComponent_div_26_p_2_Template, 2, 0, \"p\", 38);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r3.registerForm.get(\"email\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r3.registerForm.get(\"email\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"email\"]);\n  }\n}\nfunction RegisterComponent_div_32_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Birthdate is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function () {\n  return [\"required\"];\n};\nfunction RegisterComponent_div_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 37);\n    i0.ɵɵtemplate(1, RegisterComponent_div_32_div_1_Template, 2, 0, \"div\", 40);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.registerForm.controls[\"birth_date\"])(\"ngIfErrors\", i0.ɵɵpureFunction0(2, _c0));\n  }\n}\nfunction RegisterComponent_div_45_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 39);\n    i0.ɵɵtext(1, \" Gender is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 37);\n    i0.ɵɵtemplate(1, RegisterComponent_div_45_p_1_Template, 2, 0, \"p\", 38);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.registerForm.controls[\"gender\"].errors[\"required\"]);\n  }\n}\nfunction RegisterComponent_div_50_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 39);\n    i0.ɵɵtext(1, \" image is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_50_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 37);\n    i0.ɵɵtemplate(1, RegisterComponent_div_50_p_1_Template, 2, 0, \"p\", 38);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.registerForm.controls[\"image_url\"].errors[\"required\"]);\n  }\n}\nfunction RegisterComponent_div_55_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 39);\n    i0.ɵɵtext(1, \" Password is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_55_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 39);\n    i0.ɵɵtext(1, \" Password must be at least 8 characters. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_55_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 37);\n    i0.ɵɵtemplate(1, RegisterComponent_div_55_p_1_Template, 2, 0, \"p\", 38);\n    i0.ɵɵtemplate(2, RegisterComponent_div_55_p_2_Template, 2, 0, \"p\", 38);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.registerForm.controls[\"password\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r7.registerForm.get(\"password\")) == null ? null : tmp_1_0.errors[\"minlength\"]);\n  }\n}\nfunction RegisterComponent_div_60_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 39);\n    i0.ɵɵtext(1, \" Confirm password is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_60_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 39);\n    i0.ɵɵtext(1, \" Password doesn't match. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_60_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 37);\n    i0.ɵɵtemplate(1, RegisterComponent_div_60_p_1_Template, 2, 0, \"p\", 38);\n    i0.ɵɵtemplate(2, RegisterComponent_div_60_p_2_Template, 2, 0, \"p\", 38);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.registerForm.controls[\"confirm_password\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.registerForm.controls[\"confirm_password\"].errors[\"passwordMismatch\"]);\n  }\n}\nexport class RegisterComponent {\n  constructor(_AuthService, formBuilder, router) {\n    this._AuthService = _AuthService;\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.submitted = false;\n  }\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      first_name: [\"\", Validators.required],\n      last_name: [\"\", Validators.required],\n      email: [\"\", [Validators.required, Validators.email]],\n      birth_date: [\"\"],\n      address: [\"\"],\n      password: [\"\", [Validators.required, Validators.minLength(8), Validators.pattern(\"^[a-zA-Z0-9]*\")]],\n      confirm_password: [\"\", Validators.required],\n      gender: [\"\"],\n      image_url: [\"\"]\n      // agree_terms: ['', Validators.required]\n    }, {\n      validator: this.matchingPasswords(\"password\", \"confirm_password\")\n    });\n  }\n  matchingPasswords(passwordKey, confirmPasswordKey) {\n    return group => {\n      const password = group.controls[passwordKey];\n      const confirm_password = group.controls[confirmPasswordKey];\n      if (password.value !== confirm_password.value) {\n        confirm_password.setErrors({\n          passwordMismatch: true\n        });\n      }\n    };\n  }\n  get f() {\n    return this.registerForm.controls;\n  }\n  onSubmit(registerForm) {\n    this.submitted = true;\n    if (this.registerForm.invalid) {\n      console.log(registerForm);\n      return;\n    }\n    this._AuthService.register(f.value).subscribe({\n      next: response => {\n        if (response.status === 200) {\n          console.log(\"Form submitted successfully\");\n          this.router.navigate([\"/login\"]);\n        }\n      },\n      error: error => {\n        if (error.status === 0) {\n          this.error = \"Unable to connect to the server. Please try again later.\";\n        } else if (error.status === 400) {\n          this.error = error.error.Message;\n        } else if (error.status === 409) {\n          this.error = error.error.Message;\n          setTimeout(() => {\n            this.router.navigate([\"/login\"]);\n          }, 3000); // wait for 3 seconds before navigating\n        } else {\n          this.error = \"An unknown error has occurred. Please try again later.\";\n        }\n      }\n    });\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 65,\n  vars: 11,\n  consts: [[1, \"container\"], [1, \"row\"], [1, \"col-12\"], [\"class\", \"alert alert-danger text-center\", 4, \"ngIf\"], [1, \"row\", \"justify-content-center\", \"align-items-center\"], [1, \"col-lg-5\", \"col-md-8\", \"col-sm-10\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [1, \"bg-light\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"mb-3\"], [\"for\", \"first_name\", 1, \"control-label\", \"my-2\", \"text-dark\"], [\"placeholder\", \"Enter your first name\", \"id\", \"first_name\", \"type\", \"text\", \"formControlName\", \"first_name\", \"required\", \"\", 1, \"form-control\", \"bg-light\", \"text-dark\"], [\"class\", \"error\", 4, \"ngIf\"], [\"for\", \"last_name\", 1, \"control-label\", \"my-2\", \"text-dark\"], [\"placeholder\", \"Enter your last name\", \"id\", \"last_name\", \"type\", \"text\", \"formControlName\", \"last_name\", \"required\", \"\", 1, \"form-control\", \"bg-light\", \"text-dark\"], [\"for\", \"email\", 1, \"control-label\", \"my-2\", \"text-dark\"], [\"placeholder\", \"Enter your Email\", \"id\", \"email\", \"type\", \"email\", \"formControlName\", \"email\", \"required\", \"\", 1, \"form-control\", \"bg-light\", \"text-dark\"], [1, \"form-group\"], [\"for\", \"birthdate\"], [\"type\", \"date\", \"id\", \"birth_date\", \"formControlName\", \"birth_date\", 1, \"form-control\"], [\"for\", \"gender\", 1, \"control-label\", \"my-2\", \"text-dark\"], [\"id\", \"gender\", \"formControlName\", \"gender\", 1, \"form-control\"], [\"value\", \"\"], [\"value\", \"male\"], [\"value\", \"female\"], [\"value\", \"other\"], [\"for\", \"image_url\", 1, \"control-label\", \"my-2\", \"text-dark\"], [\"id\", \"image_url\", \"type\", \"file\", \"formControlName\", \"image_url\", 1, \"form-control\", \"bg-light\", \"text-dark\"], [\"for\", \"password\", 1, \"control-label\", \"my-2\", \"text-dark\"], [\"id\", \"password\", \"type\", \"password\", \"formControlName\", \"password\", \"required\", \"\", 1, \"form-control\", \"bg-light\", \"text-dark\"], [\"for\", \"confirm_password\", 1, \"control-label\", \"my-2\", \"text-dark\"], [\"id\", \"confirm_password\", \"type\", \"password\", \"formControlName\", \"confirm_password\", \"required\", \"\", 1, \"form-control\", \"bg-light\", \"text-dark\"], [1, \"form-group\", \"w-50\"], [1, \"col-sm-offset-2\", \"col-sm-10\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"alert\", \"alert-danger\", \"text-center\"], [1, \"error\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"text-danger\"], [4, \"ngIf\", \"ngIfErrors\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵtemplate(3, RegisterComponent_div_3_Template, 2, 1, \"div\", 3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6)(7, \"div\", 7)(8, \"h4\");\n      i0.ɵɵtext(9, \"Register\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 8)(11, \"form\", 9);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_11_listener() {\n        return ctx.onSubmit(ctx.registerForm);\n      });\n      i0.ɵɵelementStart(12, \"div\", 10)(13, \"label\", 11);\n      i0.ɵɵtext(14, \"First Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 12);\n      i0.ɵɵtemplate(16, RegisterComponent_div_16_Template, 2, 1, \"div\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\", 10)(18, \"label\", 14);\n      i0.ɵɵtext(19, \"Last Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"input\", 15);\n      i0.ɵɵtemplate(21, RegisterComponent_div_21_Template, 2, 1, \"div\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\", 10)(23, \"label\", 16);\n      i0.ɵɵtext(24, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"input\", 17);\n      i0.ɵɵtemplate(26, RegisterComponent_div_26_Template, 3, 2, \"div\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"div\", 10)(28, \"div\", 18)(29, \"label\", 19);\n      i0.ɵɵtext(30, \"Birthdate:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(31, \"input\", 20);\n      i0.ɵɵtemplate(32, RegisterComponent_div_32_Template, 2, 3, \"div\", 13);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(33, \"div\", 10)(34, \"label\", 21);\n      i0.ɵɵtext(35, \"gender:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"select\", 22)(37, \"option\", 23);\n      i0.ɵɵtext(38, \"Select\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"option\", 24);\n      i0.ɵɵtext(40, \"Male\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"option\", 25);\n      i0.ɵɵtext(42, \"Female\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"option\", 26);\n      i0.ɵɵtext(44, \"Other\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(45, RegisterComponent_div_45_Template, 2, 1, \"div\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(46, \"div\", 10)(47, \"label\", 27);\n      i0.ɵɵtext(48, \"image\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(49, \"input\", 28);\n      i0.ɵɵtemplate(50, RegisterComponent_div_50_Template, 2, 1, \"div\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(51, \"div\", 10)(52, \"label\", 29);\n      i0.ɵɵtext(53, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(54, \"input\", 30);\n      i0.ɵɵtemplate(55, RegisterComponent_div_55_Template, 3, 2, \"div\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(56, \"div\", 10)(57, \"label\", 31);\n      i0.ɵɵtext(58, \"confirm_password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(59, \"input\", 32);\n      i0.ɵɵtemplate(60, RegisterComponent_div_60_Template, 3, 2, \"div\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(61, \"div\", 33)(62, \"div\", 34)(63, \"button\", 35);\n      i0.ɵɵtext(64, \" Register \");\n      i0.ɵɵelementEnd()()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.error);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", (ctx.registerForm.controls[\"first_name\"] == null ? null : ctx.registerForm.controls[\"first_name\"].invalid) && (ctx.registerForm.controls[\"first_name\"].dirty || ctx.registerForm.controls[\"first_name\"].touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", (ctx.registerForm.controls[\"last_name\"] == null ? null : ctx.registerForm.controls[\"last_name\"].invalid) && (ctx.registerForm.controls[\"last_name\"].dirty || ctx.registerForm.controls[\"last_name\"].touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.registerForm.controls[\"email\"].invalid && (ctx.registerForm.controls[\"email\"].dirty || ctx.registerForm.controls[\"email\"].touched));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.registerForm.controls[\"birth_date\"].invalid && (ctx.registerForm.controls[\"birth_date\"].dirty || ctx.registerForm.controls[\"birth_date\"].touched));\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngIf\", (ctx.registerForm.controls[\"gender\"] == null ? null : ctx.registerForm.controls[\"gender\"].invalid) && (ctx.registerForm.controls[\"gender\"].dirty || ctx.registerForm.controls[\"gender\"].touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", (ctx.registerForm.controls[\"image_url\"] == null ? null : ctx.registerForm.controls[\"image_url\"].invalid) && (ctx.registerForm.controls[\"image_url\"].dirty || ctx.registerForm.controls[\"image_url\"].touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", (ctx.registerForm.controls[\"password\"] == null ? null : ctx.registerForm.controls[\"password\"].invalid) && (ctx.registerForm.controls[\"password\"].dirty || ctx.registerForm.controls[\"password\"].touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", (ctx.registerForm.controls[\"confirm_password\"] == null ? null : ctx.registerForm.controls[\"confirm_password\"].invalid) && (ctx.registerForm.controls[\"confirm_password\"].dirty || ctx.registerForm.controls[\"confirm_password\"].touched));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", ctx.registerForm.invalid);\n    }\n  },\n  dependencies: [i4.NgIf, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\".container[_ngcontent-%COMP%]{\\r\\n    margin-bottom: 20vh;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksbUJBQW1CO0FBQ3ZCIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lcntcclxuICAgIG1hcmdpbi1ib3R0b206IDIwdmg7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","RegisterComponent","constructor","_AuthService","formBuilder","router","ngOnInit","registerForm","group","first_name","required","last_name","email","birth_date","address","password","minLength","pattern","confirm_password","gender","image_url","validator","matchingPasswords","passwordKey","confirmPasswordKey","controls","value","setErrors","passwordMismatch","f","onSubmit","submitted","invalid","console","log","register","subscribe","next","response","status","navigate","error","Message","setTimeout","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["E:\\ITI\\Tasks\\Angular&Node\\Angular\\Bookshop\\src\\app\\components\\register\\register.component.ts","E:\\ITI\\Tasks\\Angular&Node\\Angular\\Bookshop\\src\\app\\components\\register\\register.component.html"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormControl,\r\n} from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { AuthService } from \"src/app/service/authentication/auth.service\";\r\nimport { User } from \"../interface/user\";\r\n\r\n@Component({\r\n  selector: \"app-register\",\r\n  templateUrl: \"./register.component.html\",\r\n  styleUrls: [\"./register.component.css\"],\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  newUser!: User;\r\n  error?: String;\r\n\r\n  constructor(\r\n    private _AuthService: AuthService,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router\r\n  ) {}\r\n\r\n  registerForm!: FormGroup;\r\n  submitted = false;\r\n\r\n  ngOnInit() {\r\n    this.registerForm = this.formBuilder.group(\r\n      {\r\n        first_name: [\"\", Validators.required],\r\n        last_name: [\"\", Validators.required],\r\n        email: [\"\", [Validators.required, Validators.email]],\r\n        birth_date: [\"\"],\r\n        address: [\"\"],\r\n        password: [\r\n          \"\",\r\n          [\r\n            Validators.required,\r\n            Validators.minLength(8),\r\n            Validators.pattern(\"^[a-zA-Z0-9]*\"),\r\n          ],\r\n        ],\r\n        confirm_password: [\"\", Validators.required],\r\n        gender: [\"\"],\r\n        image_url: [\"\"],\r\n        // agree_terms: ['', Validators.required]\r\n      },\r\n      { validator: this.matchingPasswords(\"password\", \"confirm_password\") }\r\n    );\r\n  }\r\n\r\n  matchingPasswords(passwordKey: string, confirmPasswordKey: string) {\r\n    return (group: FormGroup) => {\r\n      const password = group.controls[passwordKey];\r\n      const confirm_password = group.controls[confirmPasswordKey];\r\n\r\n      if (password.value !== confirm_password.value) {\r\n        confirm_password.setErrors({ passwordMismatch: true });\r\n      }\r\n    };\r\n  }\r\n\r\n  get f() {\r\n    return this.registerForm.controls;\r\n  }\r\n\r\n  onSubmit(registerForm: FormGroup) {\r\n    this.submitted = true;\r\n    if (this.registerForm.invalid) {\r\n      console.log(registerForm);\r\n      return;\r\n    }\r\n\r\n    this._AuthService.register(f.value).subscribe({\r\n      next: (response) => {\r\n        if (response.status === 200) {\r\n          console.log(\"Form submitted successfully\");\r\n          this.router.navigate([\"/login\"]);\r\n        }\r\n      },\r\n      error: (error) => {\r\n        if (error.status === 0) {\r\n          this.error =\r\n            \"Unable to connect to the server. Please try again later.\";\r\n        } else if (error.status === 400) {\r\n          this.error = error.error.Message;\r\n        } else if (error.status === 409) {\r\n          this.error = error.error.Message;\r\n          setTimeout(() => {\r\n            this.router.navigate([\"/login\"]);\r\n          }, 3000); // wait for 3 seconds before navigating\r\n        } else {\r\n          this.error = \"An unknown error has occurred. Please try again later.\";\r\n        }\r\n      },\r\n    });\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <div *ngIf=\"error\" class=\"alert alert-danger text-center\">\r\n        {{ error }}\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"row justify-content-center align-items-center\">\r\n    <div class=\"col-lg-5 col-md-8 col-sm-10\">\r\n      <div class=\"card\">\r\n        <div class=\"card-header\">\r\n          <h4>Register</h4>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <form\r\n            [formGroup]=\"registerForm\"\r\n            (ngSubmit)=\"onSubmit(registerForm)\"\r\n            class=\"bg-light\"\r\n          >\r\n            <div class=\"form-group mb-3\">\r\n              <label for=\"first_name\" class=\"control-label my-2 text-dark\"\r\n                >First Name:</label\r\n              >\r\n              <input\r\n                placeholder=\"Enter your first name\"\r\n                id=\"first_name\"\r\n                type=\"text\"\r\n                formControlName=\"first_name\"\r\n                class=\"form-control bg-light text-dark\"\r\n                required\r\n              />\r\n              <div\r\n                class=\"error\"\r\n                *ngIf=\"\r\n                  registerForm.controls['first_name']?.invalid &&\r\n                  (registerForm.controls['first_name'].dirty ||\r\n                    registerForm.controls['first_name'].touched)\r\n                \"\r\n              >\r\n                <p\r\n                  *ngIf=\"registerForm.get('first_name')?.errors?.['required']\"\r\n                  class=\"text-danger\"\r\n                >\r\n                  First name is required.\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group mb-3\">\r\n              <label for=\"last_name\" class=\"control-label my-2 text-dark\"\r\n                >Last Name:</label\r\n              >\r\n              <input\r\n                placeholder=\"Enter your last name\"\r\n                id=\"last_name\"\r\n                type=\"text\"\r\n                formControlName=\"last_name\"\r\n                class=\"form-control bg-light text-dark\"\r\n                required\r\n              />\r\n              <div\r\n                class=\"error\"\r\n                *ngIf=\"\r\n                  registerForm.controls['last_name']?.invalid &&\r\n                  (registerForm.controls['last_name'].dirty ||\r\n                    registerForm.controls['last_name'].touched)\r\n                \"\r\n              >\r\n                <p\r\n                  *ngIf=\"registerForm.controls['last_name'].errors!['required']\"\r\n                  class=\"text-danger\"\r\n                >\r\n                  Last name is required.\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group mb-3\">\r\n              <label for=\"email\" class=\"control-label my-2 text-dark\"\r\n                >Email:</label\r\n              >\r\n              <input\r\n                placeholder=\"Enter your Email\"\r\n                id=\"email\"\r\n                type=\"email\"\r\n                formControlName=\"email\"\r\n                class=\"form-control bg-light text-dark\"\r\n                required\r\n              />\r\n              <div\r\n                class=\"error\"\r\n                *ngIf=\"\r\n                  registerForm.controls['email'].invalid &&\r\n                  (registerForm.controls['email'].dirty ||\r\n                    registerForm.controls['email'].touched)\r\n                \"\r\n              >\r\n                <p\r\n                  *ngIf=\"registerForm.get('email')?.errors?.['required']\"\r\n                  class=\"text-danger\"\r\n                >\r\n                  Email address is required.\r\n                </p>\r\n                <p\r\n                  *ngIf=\"registerForm.get('email')?.errors?.['email']\"\r\n                  class=\"text-danger\"\r\n                >\r\n                  Invalid email address.\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group mb-3\">\r\n              <div class=\"form-group\">\r\n                <label for=\"birthdate\">Birthdate:</label>\r\n                <input\r\n                  type=\"date\"\r\n                  id=\"birth_date\"\r\n                  formControlName=\"birth_date\"\r\n                  class=\"form-control\"\r\n                />\r\n                <div\r\n                  class=\"error\"\r\n                  *ngIf=\"\r\n                    registerForm.controls['birth_date'].invalid &&\r\n                    (registerForm.controls['birth_date'].dirty ||\r\n                      registerForm.controls['birth_date'].touched)\r\n                  \"\r\n                >\r\n                  <div\r\n                    *ngIf=\"\r\n                      registerForm.controls['birth_date'];\r\n                      errors: ['required']\r\n                    \"\r\n                  >\r\n                    Birthdate is required.\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group mb-3\">\r\n              <label for=\"gender\" class=\"control-label my-2 text-dark\"\r\n                >gender:</label\r\n              >\r\n              <select id=\"gender\" formControlName=\"gender\" class=\"form-control\">\r\n                <option value=\"\">Select</option>\r\n                <option value=\"male\">Male</option>\r\n                <option value=\"female\">Female</option>\r\n                <option value=\"other\">Other</option>\r\n              </select>\r\n\r\n              <div\r\n                class=\"error\"\r\n                *ngIf=\"\r\n                  registerForm.controls['gender']?.invalid &&\r\n                  (registerForm.controls['gender'].dirty ||\r\n                    registerForm.controls['gender'].touched)\r\n                \"\r\n              >\r\n                <p\r\n                  *ngIf=\"registerForm.controls['gender'].errors!['required']\"\r\n                  class=\"text-danger\"\r\n                >\r\n                  Gender is required.\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group mb-3\">\r\n              <label for=\"image_url\" class=\"control-label my-2 text-dark\"\r\n                >image</label\r\n              >\r\n              <input\r\n                id=\"image_url\"\r\n                type=\"file\"\r\n                formControlName=\"image_url\"\r\n                class=\"form-control bg-light text-dark\"\r\n              />\r\n              <div\r\n                class=\"error\"\r\n                *ngIf=\"\r\n                  registerForm.controls['image_url']?.invalid &&\r\n                  (registerForm.controls['image_url'].dirty ||\r\n                    registerForm.controls['image_url'].touched)\r\n                \"\r\n              >\r\n                <p\r\n                  *ngIf=\"registerForm.controls['image_url'].errors!['required']\"\r\n                  class=\"text-danger\"\r\n                >\r\n                  image is required.\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group mb-3\">\r\n              <label for=\"password\" class=\"control-label my-2 text-dark\"\r\n                >Password:</label\r\n              >\r\n              <input\r\n                id=\"password\"\r\n                type=\"password\"\r\n                formControlName=\"password\"\r\n                class=\"form-control bg-light text-dark\"\r\n                required\r\n              />\r\n              <div\r\n                class=\"error\"\r\n                *ngIf=\"\r\n                  registerForm.controls['password']?.invalid &&\r\n                  (registerForm.controls['password'].dirty ||\r\n                    registerForm.controls['password'].touched)\r\n                \"\r\n              >\r\n                <p\r\n                  *ngIf=\"registerForm.controls['password'].errors!['required']\"\r\n                  class=\"text-danger\"\r\n                >\r\n                  Password is required.\r\n                </p>\r\n                <p\r\n                  *ngIf=\"(registerForm.get('password')?.errors)!['minlength']\"\r\n                  class=\"text-danger\"\r\n                >\r\n                  Password must be at least 8 characters.\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group mb-3\">\r\n              <label for=\"confirm_password\" class=\"control-label my-2 text-dark\"\r\n                >confirm_password:</label\r\n              >\r\n              <input\r\n                id=\"confirm_password\"\r\n                type=\"password\"\r\n                formControlName=\"confirm_password\"\r\n                class=\"form-control bg-light text-dark\"\r\n                required\r\n              />\r\n              <div\r\n                class=\"error\"\r\n                *ngIf=\"\r\n                  registerForm.controls['confirm_password']?.invalid &&\r\n                  (registerForm.controls['confirm_password'].dirty ||\r\n                    registerForm.controls['confirm_password'].touched)\r\n                \"\r\n              >\r\n                <p\r\n                  *ngIf=\"\r\n                    registerForm.controls['confirm_password'].errors![\r\n                      'required'\r\n                    ]\r\n                  \"\r\n                  class=\"text-danger\"\r\n                >\r\n                  Confirm password is required.\r\n                </p>\r\n                <p\r\n                  *ngIf=\"\r\n                    registerForm.controls['confirm_password'].errors![\r\n                      'passwordMismatch'\r\n                    ]\r\n                  \"\r\n                  class=\"text-danger\"\r\n                >\r\n                  Password doesn't match.\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group w-50\">\r\n              <div class=\"col-sm-offset-2 col-sm-10\">\r\n                <button\r\n                  type=\"submit\"\r\n                  [disabled]=\"registerForm.invalid\"\r\n                  class=\"btn btn-primary\"\r\n                >\r\n                  Register\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}